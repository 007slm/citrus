-- Changes in 3.1.0
* 升级到spring 3.1.1

* 修改代码，使之和spring 3.1.x兼容
  + com.alibaba.citrus.springext.support.resolver.XmlBeanDefinitionReaderProcessor
  + com.alibaba.citrus.test.context.SpringextContextLoader
  + com.alibaba.citrus.service.resource.SpringIntegrationTests：反映Resource.getFilename()的改变

* 增加检测代码，以防止webx3.1.x和spring 3.1.1之前的版本一起使用。

-- Changes in 3.1.1

* 升级依赖的jar包：

  slf4j 1.6.6
  logback 1.0.6
  log4j 1.2.17
  junit 4.10
  rhino-js 1.7R2
  nekohtml 1.9.6.2
  xerces 2.10.0
  easymock 3.1
  jasper 6.0.35
  jexl 2.1.1
  velocity 1.7
  freemarker 2.3.19
  commons-fileupload 1.2.2
  commons-io 2.3
  commons-codec 1.6
  groovy 1.8.6
  cglib 2.2.2
  xml-apis 1.4.01

* Bugfix: WebxFrameworkFilter中的excludes/passthru参数、SetLocaleRequestContext的overrider中，错误地使用了requestURI。
  正确的方式应该是requestURI除去contextPath，因为应用配置不应该依赖于contextPath。

  ！！注意：现有的web应用如果不是默认web应用（即contextPath非空），并且web.xml中对WebxFrameworkFilter配置了excludes/passthru参数的，
  必须修改参数，使之不包含contextPath。

* 改进：WebxFrameworkFilter中的excludes/passthru参数，如果pattern以!开始，代表排除。
  例如：excludes=*.jpg, !/upload/*.jpg，意味着除了/upload目录下的以外，所有的jpg图片都将从servlet容器中装载，而不是从webx框架中装载。

* 改进：由于freemarker升级以后已经支持slf4j，所以删除FreemarkerEngine中的Slf4jLoggerFactory，以及不太稳定的LoggerHack类。

* Bugfix: 移植的hessian无法运行于resin服务器。

* 添加一种新的module adapter: <screen-event-adapter />，从而支持如下情形：
  当target=/xxx/yyy/zzz.htm时，调用screen.xxx.Yyy中的doZzz()方法。
  原来的方式仍然支持。

* 为form-tool添加参数，使之可以指定formService的实例：<form-tool formServiceRef="xxx" />

* 改进<performScreen>以及screen module，使screen可以返回一个值给pipeline。此举是为了简化screen创建json的请求。
  添加了一个可选的配置参数：<performScreen resultName="screenResult" />，若不配置该参数，则"screenResult"就是默认值。
  当screen.execute()或screen.doEvent()返回一个值的时候，这个值被记录在pipelineContext中，
  其它valve可以通过pipelineContext.getAttribute("screenResult")来取得该值。

* Bugfix: 对于ClassNameWildcard和PathNameWildcard，当pattern以?开头或结束的时候，错误地匹配了多个字符（?的意思是有且仅有一个字符）

* 新增<renderResultAsJson /> valve，用来将screen所返回的对象转换成json并输出到response。


-- Changes in 3.1.2

* Bugfix: 多值field中存在null空值的时候，<all-of-values>验证器不能正确取得null值，导致验证结果错误。
* 升级servlet api到3.0.1。
  * 添加动态生成类的工具InterfaceImplementorBuilder，用来解决如下问题：
    有些测试代码需要实现ServletContext接口，但是由于servlet3和2版本对于该接口的API不同，导致无法用一套代码同时兼容servlet3和2。用动态生成类工具就可以解决这个问题。
* 改进request context服务，使之在async模式被启动时，不会提交response。当async线程重新取得控制时，可以重新取得原来的request context。
* 改进<renderTemplate> valve，当buffering关闭时，只不过不显示layout，而不会报错。
* 添加<setBuffering enabled="true|false" /> valve，可以在pipeline中开关buffering，以简化screen代码。
* 添加异步执行功能，以下为pipeline片段：
  <performScreen/>
  <performRunnableAsync>
      <setLoggingContext />
      <doPerformRunnable />
  </performRunnableAsync>
  当screen返回runnable或callable对象时，就会启动异步操作。runnable或callable将在另一个线程中被执行。

* 修改了参数名称，使含义更明确：
  <performScreen output="result" />
  <renderResultAsJson input="result" />

* 为RequestContext增加了commitHeaders功能，这样，当buffering关掉时，确保headers能正常输出到浏览器。
  * 新增了TwoPhaseCommitRequestContext接口，如有request context希望在headers提交时被调用，可从此接口派生。
  * 改进如下RequestContext实现，使之从TwoPhaseCommitRequestContext派生：
    * BasicRequestContext
    * LazyCommitRequestContext
    * SessionRequestContext
  * 修改了RequestContextLifecycleInterceptor接口，添加了commitHeaders()方法。如有应用实现了这个接口，需要更改代码并重新编译。
  * 改进了CookieStore，确保cookie能在response被提交前写入。

